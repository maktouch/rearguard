# Reference https://github.com/emotion-js/emotion/blob/master/.circleci/config.yml
version: 2.1
jobs:
  download:
    docker:
      - image: circleci/node:14
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-
      - run: yarn install --pure-lockfile
      - run:
          name: Download isBurner data
          command: node isBurner/tools/download.js
      - run:
          name: Download isBot data
          command: node isBot/tools/download.js
      - run:
          name: Todo
          command: echo "make this a chron job check number and bump"
  test:
    docker:
      - image: circleci/node:14
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-
      - run: yarn install --pure-lockfile
      - run:
          name: Download isBot data
          command: node isBot/tools/download.js
      - run:
          name: Ava Tests
          command: yarn test
  release:
    docker:
      - image: circleci/node:14
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Git setup
          command: |
            git config user.email "circleci-bot@circleci.com"
            git config user.name "Proxima Release Bot ðŸ¤–"
            git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git
      - run:
          name: Release checking
          command: |
            LATEST_COMMIT=$(git log --oneline -n 1 HEAD)
            COMMIT_REGEX="(develop|staging|release|ci)"

            if [[ $LATEST_COMMIT =~ $COMMIT_REGEX ]]; then
                echo "This is a release or maintainance, kill this one!"
                circleci step halt
            else
              echo "Proceed. Prepare a new release"
            fi

      - run:
          name: NPM setup
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-
      - run: yarn install --pure-lockfile
      - run:
          name: Get new version of upcoming package
          command: node next.js
      - run:
          name: Setup new version to each package and publish to NPM
          command: |
            PACKAGE_VERSION=$(cat VERSION | sed 's/ *$//g') && PACKAGE_VERSION=$PACKAGE_VERSION yarn workspaces run version && PACKAGE_VERSION=$PACKAGE_VERSION yarn workspaces run bump
      - run:
          name: Get new version, add git tags, releases and push
          command: |
            yarn next
            git push --follow-tags origin main

workflows:
  version: 2
  test-and-publish:
    jobs:
      - test
      - release:
          requires:
            - test
          filters:
            branches:
              only: main
